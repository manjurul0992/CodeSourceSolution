// <auto-generated />
using System;
using CodeSourceSolution.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CodeSourceSolution.Migrations
{
    [DbContext(typeof(PlayerDbContext))]
    partial class PlayerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CodeSourceSolution.Models.Format", b =>
                {
                    b.Property<int>("FormatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FormatName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("FormatId");

                    b.ToTable("Formats");

                    b.HasData(
                        new
                        {
                            FormatId = 1,
                            FormatName = "ODI"
                        },
                        new
                        {
                            FormatId = 2,
                            FormatName = "Test"
                        },
                        new
                        {
                            FormatId = 3,
                            FormatName = "T20"
                        });
                });

            modelBuilder.Entity("CodeSourceSolution.Models.Player", b =>
                {
                    b.Property<int>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateOfBirth")
                        .IsRequired()
                        .HasColumnType("date");

                    b.Property<bool?>("MaritalStatus")
                        .HasColumnType("bit");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PlayerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PlayerId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("CodeSourceSolution.Models.SeriesEntry", b =>
                {
                    b.Property<int>("SeriesEntryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FormatId")
                        .HasColumnType("int");

                    b.Property<int?>("PlayerId")
                        .HasColumnType("int");

                    b.HasKey("SeriesEntryId");

                    b.HasIndex("FormatId");

                    b.HasIndex("PlayerId");

                    b.ToTable("SeriesEntries");
                });

            modelBuilder.Entity("CodeSourceSolution.Models.SeriesEntry", b =>
                {
                    b.HasOne("CodeSourceSolution.Models.Format", "Format")
                        .WithMany("SeriesEntries")
                        .HasForeignKey("FormatId");

                    b.HasOne("CodeSourceSolution.Models.Player", "Player")
                        .WithMany("SeriesEntries")
                        .HasForeignKey("PlayerId");

                    b.Navigation("Format");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("CodeSourceSolution.Models.Format", b =>
                {
                    b.Navigation("SeriesEntries");
                });

            modelBuilder.Entity("CodeSourceSolution.Models.Player", b =>
                {
                    b.Navigation("SeriesEntries");
                });
#pragma warning restore 612, 618
        }
    }
}
